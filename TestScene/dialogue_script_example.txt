# This is a dialogue script file
# It's an easy to use way to create dialogue graphs for SCHLib's dialogue system
# Lines that start with a '#' are comments, they are ignored by the parser and can be used to document your scripts.

Stranger:
Excuse me.

# A script file is made up of one or more 'dialogue blocks'
# These sections tell the system all it needs to show dialogue text to the player.
# A block can have one or more special properties, but the most common one follows this simple pattern.
# CHARACTER NAME:
# Dialogue line 1
# Dialogue line 2
# etc...

Stranger:
Can you help me out with this totally-simple-and-not-at-all-painful task?
I could reaaally use a hand right now.

	Who are you again?
	[question]
	
	Sure, why not
	[help]

# Dialogue blocks can have up to four possible routes
# You can define them by adding an indent followed by the choice text
# Below it, you can specify which block to jump to when the player makes their selection.

[question]
Stranger:
*sigh*

# You can assign a tag to a block by adding the following statement before the character ID
# [tag_name]
# Since the preceding block is now tagged as 'question', the script will now jump to that
# if the player chooses the first option from the previous block.

Stranger:
You know what, I can carry this thing myself.

Stranger:
I don't need anybody's help!

@refuse_help
@close

# Command statements will execute the specified instruction once the block has been completed.
# They can be called using the following syntax.
# @command_name

# The preceding block defines two command calls:
## refuse_help -> a custom command that will fire a 'HandleCommandRequest' signal from the player object
## close -> a command that terminates the script once the player tries to go to the next block

# When doing choice jumps, it is necessary to use the 'close' command at the final dialogue block
# to prevent the script from continuing further.

# You can add up to five commands per block.
# Anything added after that will be discarded by the parser.

[help]
Stranger:
Thank you!

Stranger:
Okay... take this thing.

@add_box

Stranger:
And this...

@add_box

Stranger:
Aaaand this...

@add_box

Stranger:
Thank you.

Stranger:
Your name is $playerName, right?

	How did you know that?
	[pointless_choice]
	
	Not really
	[pointless_choice]

# You can use variables to 'personalise' your dialogue
# These can be set through the 'player' object and will be automatically replaced at runtime.

[pointless_choice]
Stranger:
...

Stranger:
You're wearing a name tag.

Stranger:
Anyways, see you later.

Stranger:
Please take them somewhere else.

Stranger:
Or keep them, if you want.

Stranger:
It feels so great to finally be free from this thing!

@walk_away
@close